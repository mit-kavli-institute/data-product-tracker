name: CI

on:
  pull_request:
    branches: [ master, staging ]
  push:
    branches: [ master, staging ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Configure SSH for private dependencies
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -t rsa tessgit.mit.edu >> ~/.ssh/known_hosts

    - name: Build test container
      run: |
        docker compose build test-runner

    - name: Run tests with nox
      run: |
        docker compose run --rm test-runner nox -s tests lint typecheck

    - name: Generate coverage report
      run: |
        docker compose run --rm test-runner nox -s coverage

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/
      if: always()

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      if: always()

  test-python-versions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Configure SSH for private dependencies
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -t rsa tessgit.mit.edu >> ~/.ssh/known_hosts

    - name: Build test container
      run: |
        docker compose build test-runner

    - name: Run tests for Python ${{ matrix.python-version }}
      run: |
        docker compose run --rm test-runner nox -s tests-${{ matrix.python-version }}

  docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build test container
      run: |
        docker compose build test-runner

    - name: Build documentation
      run: |
        docker compose run --rm test-runner nox -s docs

    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/_build/html/
      if: always()

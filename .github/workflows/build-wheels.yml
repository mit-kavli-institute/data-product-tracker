name: Build and Upload Python Wheels

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: 'Package name to build'
        required: true
        type: string
      git_url:
        description: 'Git repository URL'
        required: true
        type: string
      version_tag:
        description: 'Version tag to build'
        required: true
        type: string

jobs:
  build-wheel:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout PyPI index repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build wheel

    - name: Clone and build package
      run: |
        # Clone the package repository
        git clone ${{ inputs.git_url }} temp_package
        cd temp_package
        git checkout ${{ inputs.version_tag }}

        # Build the wheel
        python -m build

        # Copy wheels to output directory
        mkdir -p ../wheels/${{ inputs.package_name }}
        cp dist/*.whl ../wheels/${{ inputs.package_name }}/
        cp dist/*.tar.gz ../wheels/${{ inputs.package_name }}/ || true

    - name: Create or update GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ inputs.package_name }}-${{ inputs.version_tag }}
        name: ${{ inputs.package_name }} ${{ inputs.version_tag }}
        files: |
          wheels/${{ inputs.package_name }}/*.whl
          wheels/${{ inputs.package_name }}/*.tar.gz
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update package index
      run: |
        # Get the release URL for the wheel files
        RELEASE_TAG="${{ inputs.package_name }}-${{ inputs.version_tag }}"
        REPO_URL="https://github.com/${{ github.repository }}"

        # Create package directory if it doesn't exist
        mkdir -p ${{ inputs.package_name }}

        # Generate index.html with wheel links
        cat > ${{ inputs.package_name }}/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
          <title>${{ inputs.package_name }}</title>
          <link crossorigin="anonymous" href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.min.css" rel="stylesheet" />
          <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;600&amp;display=swap" rel="stylesheet" type="text/css" />
          <link href="https://gist.githubusercontent.com/astariul/c09af596e802e945d3032774e10e1047/raw/f693a2e2b65966494da082887bc4be2917f615e4/random_icon.svg" rel="icon" />
          <link href="../static/package_styles.css" rel="stylesheet" />
        </head>
        <body>
          <div class="container">
            <section class="header">
              <h2 class="title">${{ inputs.package_name }}</h2>
            </section>
            <div>
              <h6>Install</h6>
              <pre><code>pip install ${{ inputs.package_name }} --extra-index-url https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/</code></pre>
            </div>
            <h6>Available versions</h6>
        EOF

        # Find all wheel files for this package
        for wheel in wheels/${{ inputs.package_name }}/*.whl; do
          if [ -f "$wheel" ]; then
            filename=$(basename "$wheel")
            echo "    <a href=\"${REPO_URL}/releases/download/${RELEASE_TAG}/${filename}\">${filename}</a><br>" >> ${{ inputs.package_name }}/index.html
          fi
        done

        # Add tar.gz files if they exist
        for sdist in wheels/${{ inputs.package_name }}/*.tar.gz; do
          if [ -f "$sdist" ]; then
            filename=$(basename "$sdist")
            echo "    <a href=\"${REPO_URL}/releases/download/${RELEASE_TAG}/${filename}\">${filename}</a><br>" >> ${{ inputs.package_name }}/index.html
          fi
        done

        # Close HTML
        cat >> ${{ inputs.package_name }}/index.html << 'EOF'
          </div>
        </body>
        </html>
        EOF

    - name: Commit and push index updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ${{ inputs.package_name }}/index.html
        git commit -m "Update ${{ inputs.package_name }} index with wheel for ${{ inputs.version_tag }}" || echo "No changes to commit"
        git push

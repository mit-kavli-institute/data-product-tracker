services:
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      - .:/app
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    working_dir: /app
    command: nox
    stdin_open: true
    tty: true
    networks:
      - test-network

  # Service for running specific nox sessions
  nox:
    extends: test-runner
    command: ${NOX_SESSION:-nox}

  # Service for interactive development
  dev:
    extends: test-runner
    command: /bin/bash

  docs:
    extends: test-runner
    command: nox -s docs

  # Database services for multi-database testing
  postgres-16:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5433:5432"
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    tmpfs:
      - /var/lib/postgresql/data
    command: >
      postgres
      -c shared_buffers=128MB
      -c max_connections=100
      -c log_statement=all

  postgres-14:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5434:5432"
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    tmpfs:
      - /var/lib/postgresql/data

  mysql-8:
    image: mysql:8-debian
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass
    ports:
      - "3307:3306"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpass"]
      interval: 5s
      timeout: 5s
      retries: 5
    tmpfs:
      - /var/lib/mysql
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci

  mariadb-11:
    image: mariadb:11-jammy
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass
    ports:
      - "3308:3306"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 5s
      timeout: 5s
      retries: 5
    tmpfs:
      - /var/lib/mysql

networks:
  test-network:
    driver: bridge
